buildscript {
    ext { 
	      log4jVersion = '1.2.7'
		  httpClientVersion = '4.5.2'
          apacheCommonsVersion = '3.2'
          jCommanderVersion = '1.47'
		 }
		repositories {
			mavenCentral()
			jcenter()
		}
		dependencies {
        	classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'jacoco'
id "org.sonarqube" version "2.8"
group = 'br.com.sumware.proxy'

sourceCompatibility = 1.6

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

jar {
    baseName = 'proxy-test'
    version =  '1.0'
    manifest {
        attributes 'Main-Class': 'br.com.sumware.proxy.ProxyTest'
    }
}

 shadowJar {
   baseName = 'proxy'
   classifier = null
   version = 'test'
}

repositories {		
    mavenCentral()
    jcenter()
}

dependencies {
    // Log4J
    compile group: 'log4j', name: 'log4j', version: "${log4jVersion}"
    
    // HTTP Client
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:"${httpClientVersion}"
    
    // Apache Commons
    compile group: 'org.apache.commons', name: 'commons-lang3', version: "${apacheCommonsVersion}"

    //JCommander
    compile group: 'com.beust', name: 'jcommander', version: "${jCommanderVersion}"	

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

}

task compileOne (type: JavaCompile) {
    source = fileTree(dir: 'src', include: '**/*.java')
    classpath = files('build/classes/main')
    destinationDir = file('build/classes/main')
    sourceCompatibility = '1.6'
    targetCompatibility = '1.6'
}
compileOne.options.compilerArgs = ["-sourcepath", "$projectDir/src/main/java"]

test {
    
    useJUnitPlatform()

    maxHeapSize = '1G'
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    
    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled false
        }
    }

check.dependsOn jacocoTestReport   

}

plugins {
  
}

sonarqube {
  properties {
    property "sonar.projectKey", "opensumware_proxy-test"
  }
}